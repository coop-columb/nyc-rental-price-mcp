[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "nyc_rental_price"
version = "0.1.0"
description = "Machine learning model for predicting NYC rental prices"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "NYC Rental Price Prediction Team", email = "example@example.com"}
]
keywords = ["nyc", "rental", "price", "prediction", "machine learning", "pytorch", "tensorflow"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
addopts = "--cov=src --cov-report=xml --cov-report=term"

[tool.ruff]
target-version = "py38"
line-length = 88
select = ["E", "F", "B", "I", "N", "UP", "S", "BLE", "C4", "T20", "PT", "RET", "SIM"]
ignore = ["E203"]
exclude = [
    ".eggs",
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "build",
    "dist",
    "venv",
]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101", "S105", "S106"]

[tool.coverage.run]
source = ["src"]
omit = ["tests/*", "setup.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]

[tool.pre-commit]
hooks = [
    "trailing-whitespace",
    "end-of-file-fixer",
    "check-yaml",
    "check-added-large-files",
    "check-ast",
    "check-json",
    "check-merge-conflict",
    "detect-private-key",
    "black",
    "ruff",
    "mypy",
    "isort",
]